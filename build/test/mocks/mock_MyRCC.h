/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_MYRCC_H
#define _MOCK_MYRCC_H

#include "unity.h"
#include "MyRCC.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_MyRCC_Init(void);
void mock_MyRCC_Destroy(void);
void mock_MyRCC_Verify(void);




#define MyRCC_GPIOClockEnable_IgnoreAndReturn(cmock_retval) MyRCC_GPIOClockEnable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void MyRCC_GPIOClockEnable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, Error_Code_e cmock_to_return);
#define MyRCC_GPIOClockEnable_StopIgnore() MyRCC_GPIOClockEnable_CMockStopIgnore()
void MyRCC_GPIOClockEnable_CMockStopIgnore(void);
#define MyRCC_GPIOClockEnable_ExpectAndReturn(reg, gpio_port, cmock_retval) MyRCC_GPIOClockEnable_CMockExpectAndReturn(__LINE__, reg, gpio_port, cmock_retval)
void MyRCC_GPIOClockEnable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, rcc_register* reg, int gpio_port, Error_Code_e cmock_to_return);
typedef Error_Code_e (* CMOCK_MyRCC_GPIOClockEnable_CALLBACK)(rcc_register* reg, int gpio_port, int cmock_num_calls);
void MyRCC_GPIOClockEnable_AddCallback(CMOCK_MyRCC_GPIOClockEnable_CALLBACK Callback);
void MyRCC_GPIOClockEnable_Stub(CMOCK_MyRCC_GPIOClockEnable_CALLBACK Callback);
#define MyRCC_GPIOClockEnable_StubWithCallback MyRCC_GPIOClockEnable_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
